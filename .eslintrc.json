{
  "env": {
    "browser": true,
    "node": true,
    "jest": true,
    "es6": true,
    "webextensions": true
  },
  "globals": {
    "React": true,
    "google": true,
    "mount": true,
    "mountWithRouter": true,
    "shallow": true,
    "shallowWithRouter": true,
    "context": true,
    "expect": true,
    "jsdom": true,
    "JSX": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "eslint:recommended",
    "plugin:prettier/recommended",
    "react-app/jest"
  ],
  "parserOptions": {
    "ecmaVersion": 2019,
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "react/prop-types": "off",
    "jsx-a11y/alt-text": "off",
    "react/display-name": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": [
      "error",
      {
        "additionalHooks": "(useAsync|useAsyncCallback)"
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [2, { "vars": "all", "args": "none" }],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "warn",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "off",
      {
        "overrides": {
          "constructors": "off"
        }
      }
    ],
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/no-angle-bracket-type-assertion": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/consistent-type-assertions": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-require-imports": "off",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-triple-slash-reference": "off",
    "@typescript-eslint/no-use-before-declare": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/type-annotation-spacing": "off",
    "@typescript-eslint/unified-signatures": "error",
    "arrow-body-style": "off",
    "arrow-parens": ["off", "as-needed"],
    "complexity": "off",
    "constructor-super": "error",
    "curly": "off",
    "dot-notation": "error",
    "eol-last": "off",
    "guard-for-in": "error",
    "linebreak-style": "off",
    "max-classes-per-file": "off",
    "member-ordering": "off",
    "new-parens": "off",
    "newline-per-chained-call": "off",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-console": "warn",
    "no-debugger": "error",
    "no-empty": "error",
    "no-empty-functions": "off",
    "no-eval": "error",
    "no-extra-semi": "off",
    "no-restricted-globals": "off",
    "no-fallthrough": "error",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "off",
    "no-multiple-empty-lines": "off",
    "no-new-wrappers": "error",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "no-var": "error",
    "object-shorthand": "off",
    "one-var": "off",
    "prefer-const": "error",
    "prefer-template": "off",
    "quote-props": "off",
    "radix": "error",
    "space-before-function-paren": "off",
    "use-isnan": "error",
    "valid-typeof": "off",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "sort-imports": "off",
    "import/order": "off",
    "react/react-in-jsx-scope": "off",
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first then side effect imports nad global packages
          ["^react.*", "^\\u0000", "^[^@.]+.*$"],
          // Internal packages.
          ["^@?\\w", "^(@|@company|@ui|components|utils|config|vendored-lib)(/.*|$)"],
          // Parent imports. Put `..` last.
          // Other relative imports. Put same-folder imports and `.` last.
          // Style imports.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$", "^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$", "^.+\\.s?css$"]
        ]
      }
    ]
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react-hooks", "simple-import-sort"]
}
